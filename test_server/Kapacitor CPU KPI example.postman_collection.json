{
	"variables": [],
	"info": {
		"name": "2 - Kapacitor CPU KPI examples",
		"_postman_id": "e7e032c9-0833-03ee-169e-45a51d6076c5",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "retrive tasks",
			"request": {
				"url": "http://{{server}}:9092/kapacitor/v1/tasks",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "retrive cpu-utilization task",
			"request": {
				"url": "http://{{server}}:9092/kapacitor/v1/tasks/cpu_alert_one_minute",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "cpu-utilization KPI using default()",
			"request": {
				"url": "http://{{server}}:9092/kapacitor/v1/tasks",
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\" : \"cpu_alert_one_minute\",\n    \"type\" : \"stream\",\n    \"status\" : \"enabled\",\n    \"dbrps\": [{\"db\": \"mdt_db\", \"rp\" : \"test6h\"}],\n    \"script\": \"stream\\n  |from()\\n  .measurement('Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization')\\n  .groupBy('Producer','node-name','process-cpu__process-name')\\n  |default()\\n  .field('total-cpu-one-minute',0)\\n | alert()\\n .info(lambda: \\\"total-cpu-one-minute\\\" > 10)\\n  .warn(lambda: \\\"total-cpu-one-minute\\\" > 15)\\n  .crit(lambda: \\\"total-cpu-one-minute\\\" > 20)\\n  .message('Custom message - total-cpu-one-minute usage is {{ .Level }}')\\n  .log('/tmp/alerts.log')\\n  .post('http://192.168.10.3:8080')\\n .stateChangesOnly()\" \n}"
				},
				"description": "Create a total-cpu-one-minute utilization KPI on Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization, generating log and POST notification when system CPU increase over 10 (info), 15 (warn) and 20 (critical).\nTask is using the default() node feature to default total-cpu-one-minute to 0 for system processes that use the process-cpu__process-cpu-xyz fields instead of total-cpu-one-minute, leaving this fields undefined. Initializing total-cpu-one-minute to 0 avoid errors generated by alert() nodes because of missing the missing field."
			},
			"response": []
		},
		{
			"name": "cpu-utilization using default() and log()",
			"request": {
				"url": "http://{{server}}:9092/kapacitor/v1/tasks",
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\" : \"cpu_alert_one_minute\",\n    \"type\" : \"stream\",\n    \"status\" : \"enabled\",\n    \"dbrps\": [{\"db\": \"mdt_db\", \"rp\" : \"test6h\"}],\n    \"script\": \"stream\\n  |from()\\n  .measurement('Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization')\\n  .groupBy('Producer','node-name','process-cpu__process-name')\\n  |default()\\n  .field('total-cpu-one-minute',0)\\n | log()\\n |alert()\\n .info(lambda: \\\"total-cpu-one-minute\\\" > 10)\\n  .warn(lambda: \\\"total-cpu-one-minute\\\" > 15)\\n  .crit(lambda: \\\"total-cpu-one-minute\\\" > 20)\\n  .message('Custom message - total-cpu-one-minute usage is {{ .Level }}')\\n  .log('/tmp/alerts.log')\\n  .post('http://192.168.10.3:8080')\\n .stateChangesOnly()\" \n}"
				},
				"description": "works as \"cpu-utilization KPI using default()\" POST but add the log() mode to save the measurement received on Kapacitor log file. When using docker, you can access Kapacitor log using \"docker logs --tail 20 -f <docker-id>\" where Kapacitor docker-id is retrieved from \"docker ps\"."
			},
			"response": []
		},
		{
			"name": "cpu-utilization KPI - filtering out measurement from processes",
			"request": {
				"url": "http://{{server}}:9092/kapacitor/v1/tasks",
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\" : \"cpu_alert_one_minute\",\n    \"type\" : \"stream\",\n    \"status\" : \"enabled\",\n    \"dbrps\": [{\"db\": \"mdt_db\", \"rp\" : \"test6h\"}],\n    \"script\": \"stream\\n  |from()\\n  .measurement('Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization')\\n .groupBy('Producer','node-name','process-cpu__process-name')\\n |  default()\\n  .tag('process-cpu__process-name','system')\\n | where(lambda: \\\"process-cpu__process-name\\\" == 'system' )\\n |alert()\\n .info(lambda: \\\"total-cpu-one-minute\\\" > 10)\\n  .warn(lambda: \\\"total-cpu-one-minute\\\" > 15)\\n  .crit(lambda: \\\"total-cpu-one-minute\\\" > 20)\\n  .message('Custom message - total-cpu-one-minute usage is {{ .Level }}')\\n  .log('/tmp/alerts.log')\\n  .post('http://192.168.10.3:8080')\\n .stateChangesOnly()\" \n}"
				},
				"description": "This KPI achieves the same outcome of \"cpu-utilization KPI using default()\" but it filters out all CPU measurements from processes and the alert() node will evaluate only system CPU measurements.\r\nProcess CPU measurements was filtered out with a two steps approach (default + where) after \"where(lambda: 'process-cpu__process-name' =~ /^$/\" failed to filter undefined field.  \r\n\r\n| default()  \r\n .tag('process-cpu__process-name','system')\r\n| where(lambda: \\\"process-cpu__process-name\\\" == 'system' )"
			},
			"response": []
		},
		{
			"name": "Delete specific task cpu_alert_one_minute",
			"request": {
				"url": "http://{{server}}:9092/kapacitor/v1/tasks/cpu_alert_one_minute",
				"method": "DELETE",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "disable system-monitoring/cpu-utilization",
			"request": {
				"url": "http://{{server}}:9092/kapacitor/v1/tasks/cpu_alert_one_minute",
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\" : \"disabled\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "enable system-monitoring/cpu-utilization",
			"request": {
				"url": "http://{{server}}:9092/kapacitor/v1/tasks/cpu_alert_one_minute",
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\" : \"enabled\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Trigger critical CPU alarms in mdt_db&rp=test6h",
			"request": {
				"url": {
					"raw": "http://{{server}}:8086/write?db=mdt_db&rp=test6h",
					"protocol": "http",
					"host": [
						"{{server}}"
					],
					"port": "8086",
					"path": [
						"write"
					],
					"query": [
						{
							"key": "db",
							"value": "mdt_db",
							"equals": true,
							"description": ""
						},
						{
							"key": "rp",
							"value": "test6h",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization,EncodingPath=Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization,Producer=FakeRouter,node-name=0/RSP0/CPU0 total-cpu-one-minute=21i"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Trigger warn CPU alarms in mdt_db&rp=test6h",
			"request": {
				"url": {
					"raw": "http://{{server}}:8086/write?db=mdt_db&rp=test6h",
					"protocol": "http",
					"host": [
						"{{server}}"
					],
					"port": "8086",
					"path": [
						"write"
					],
					"query": [
						{
							"key": "db",
							"value": "mdt_db",
							"equals": true,
							"description": ""
						},
						{
							"key": "rp",
							"value": "test6h",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization,EncodingPath=Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization,Producer=FakeRouter,node-name=0/RSP0/CPU0 total-cpu-one-minute=16i"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Trigger info CPU alarms in mdt_db&rp=test6h",
			"request": {
				"url": {
					"raw": "http://{{server}}:8086/write?db=mdt_db&rp=test6h",
					"protocol": "http",
					"host": [
						"{{server}}"
					],
					"port": "8086",
					"path": [
						"write"
					],
					"query": [
						{
							"key": "db",
							"value": "mdt_db",
							"equals": true,
							"description": ""
						},
						{
							"key": "rp",
							"value": "test6h",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization,EncodingPath=Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization,Producer=FakeRouter,node-name=0/RSP0/CPU0 total-cpu-one-minute=11i"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Trigger clear CPU alarms in mdt_db&rp=test6h",
			"request": {
				"url": {
					"raw": "http://{{server}}:8086/write?db=mdt_db&rp=test6h",
					"protocol": "http",
					"host": [
						"{{server}}"
					],
					"port": "8086",
					"path": [
						"write"
					],
					"query": [
						{
							"key": "db",
							"value": "mdt_db",
							"equals": true,
							"description": ""
						},
						{
							"key": "rp",
							"value": "test6h",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization,EncodingPath=Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization,Producer=FakeRouter,node-name=0/RSP0/CPU0 total-cpu-one-minute=2i"
				},
				"description": ""
			},
			"response": []
		}
	]
}